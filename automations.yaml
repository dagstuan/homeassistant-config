- id: '1612816203699'
  alias: Turn off lights when Apple TV plays movie
  description: ''
  trigger:
  - platform: state
    entity_id:
    - media_player.stua
    to: playing
    for:
      seconds: 2
  condition:
  - condition: and
    conditions:
    - condition: or
      conditions:
      - condition: state
        entity_id: media_player.stua
        attribute: app_id
        state: com.netflix.Netflix
      - condition: state
        entity_id: media_player.stua
        attribute: app_id
        state: com.plexapp.plex
      - condition: state
        entity_id: media_player.stua
        attribute: app_id
        state: com.apple.TVWatchList
      - condition: state
        entity_id: media_player.stua
        attribute: app_id
        state: com.firecore.infuse
    - condition: numeric_state
      entity_id: media_player.stua
      attribute: media_duration
      above: 2500
    - condition: state
      entity_id: input_boolean.lights_dimmed_by_movie_mode
      state: 'off'
  action:
  - service: scene.create
    data:
      scene_id: before_film_stua
      snapshot_entities:
      - light.hjorne
      - light.ikea_lampe
      - light.spisebord
      - light.oy
      - light.spotter
      - light.gang
  - service: adaptive_lighting.set_manual_control
    data:
      entity_id:
      - switch.adaptive_lighting_hjorne
      manual_control: true
  - service: scene.turn_on
    target:
      entity_id: scene.film
    metadata: {}
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.lights_dimmed_by_movie_mode
  mode: restart
- id: '1612816203700'
  alias: Turn on lights when Apple TV stops playing
  description: ''
  trigger:
  - platform: state
    entity_id:
    - media_player.stua
    from: playing
    for:
      hours: 0
      minutes: 0
      seconds: 7
  condition:
  - condition: state
    entity_id: input_boolean.lights_dimmed_by_movie_mode
    state: 'on'
  action:
  - service: scene.turn_on
    target:
      entity_id: scene.before_film_stua
    data: {}
  - service: adaptive_lighting.set_manual_control
    data:
      entity_id:
      - switch.adaptive_lighting_hjorne
      manual_control: false
  - service: input_boolean.turn_off
    target:
      entity_id: input_boolean.lights_dimmed_by_movie_mode
    data: {}
  mode: restart
- id: '1634676373160'
  alias: Wakeup Soverom
  description: ''
  triggers:
  - event_type: WAKEUP_SOVEROM
    trigger: event
    enabled: false
  - trigger: time
    at: input_datetime.wakeup_time
    enabled: true
  conditions:
  - condition: template
    value_template: "{% set today = now().weekday() %} {% set weekdays = {\n    0:
      states('input_boolean.wakeup_enabled_monday'),\n    1: states('input_boolean.wakeup_enabled_tuesday'),\n
      \   2: states('input_boolean.wakeup_enabled_wednesday'),\n    3: states('input_boolean.wakeup_enabled_thursday'),\n
      \   4: states('input_boolean.wakeup_enabled_friday'),\n    5: states('input_boolean.wakeup_enabled_saturday'),\n
      \   6: states('input_boolean.wakeup_enabled_sunday')\n} %} {{ weekdays[today]
      == 'on' }}\n"
    enabled: true
  - condition: numeric_state
    entity_id: zone.home
    above: 0
    enabled: true
  actions:
  - data: {}
    target:
      entity_id: input_boolean.alarm_triggered_today
    action: input_boolean.turn_on
  - parallel:
    - sequence:
      - target:
          entity_id: light.soveromslampe
        data:
          brightness: 0
        action: light.turn_on
      - target:
          entity_id: light.soveromslampe
        data:
          brightness: 255
          transition: 1200
        action: light.turn_on
      alias: Fade inn lys på soverom
    - sequence:
      - continue_on_error: true
        target:
          entity_id: media_player.soverom
        data:
          volume_level: 0.07
        action: media_player.volume_set
      - repeat:
          count: '5'
          sequence:
          - if:
            - condition: not
              conditions:
              - condition: device
                device_id: d08f2de88380e738d51d27b9e5747bb8
                domain: media_player
                entity_id: media_player.soverom
                type: is_playing
            then:
            - continue_on_error: true
              target:
                entity_id: media_player.soverom
              data:
                media_content_id: FV:2/21
                media_content_type: favorite_item_id
              metadata:
                title: NRK P3
              action: media_player.play_media
            - delay:
                hours: 0
                minutes: 0
                seconds: 5
                milliseconds: 0
      alias: Slå på Sonos på soverom
  - delay:
      hours: 0
      minutes: 0
      seconds: 30
      milliseconds: 0
  - continue_on_error: true
    metadata: {}
    data: {}
    action: script.tts_morning_soverom
  - delay:
      hours: 0
      minutes: 10
      seconds: 0
      milliseconds: 0
  - alias: Turn on lights and start kaffetrakter
    parallel:
    - action: script.kaffetrakter_morning
      data: {}
    - target:
        entity_id: scene.stue_og_kjokken_pa
      metadata: {}
      enabled: true
      action: scene.turn_on
  - delay:
      hours: 1
      minutes: 50
      seconds: 0
      milliseconds: 0
  - data: {}
    target:
      entity_id: media_player.soverom
    action: media_player.media_stop
  mode: restart
- id: '1662475420588'
  alias: Plex remote started playing notification
  trigger:
  - platform: state
    entity_id:
    - media_player.plex_torgeirthoresen_plex_for_android_tv_4k_led_tv_powered_by_android
    - media_player.plex_torgeirthoresen_plex_for_ios_torgeir_s_iphone_252
    - media_player.plex_pedervl_plex_for_apple_tv_stua
    - media_player.plex_pedervl_plex_for_mac_bekk_mac_02489
    from:
    - idle
    - unavailable
    to: playing
  action:
  - service: notify.mobile_app_dagphone
    data:
      title: Playing on {{ device }}
      message: "{% if series == None %}\n  {{ title }}\n{% else %}\n  {{ series }}
        - {{ title }}\n{% endif %}\n"
      data:
        icon_url: '{{ picture }}'
  mode: single
  variables:
    device: '{{ state_attr(trigger.entity_id, ''friendly_name'') }}'
    series: '{{ state_attr(trigger.entity_id, ''media_series_title'') }}'
    title: '{{ state_attr(trigger.entity_id, ''media_title'') }}'
    picture: '{{ state_attr(trigger.entity_id, ''entity_picture'') }}'
- id: '1662476129447'
  alias: Plex remote playing
  trigger:
  - platform: numeric_state
    entity_id: sensor.tautulli_wan_bandwidth
    for:
      hours: 0
      minutes: 0
      seconds: 5
    above: 2000
  action:
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.transmission_turtle_mode
  mode: single
- id: '1663777219467'
  alias: Notify unavailable entities
  description: ''
  triggers:
  - entity_id:
    - media_player.soverom
    - media_player.sonos_stue
    - media_player.kjokken
    - light.soveromslampe
    - light.hue_filament_bulb_1
    - light.ikea_lampe
    - light.spisebord
    - sensor.plex_nas
    - climate.kontor
    - climate.soverom
    - climate.stua
    - switch.vaskemaskin
    - switch.kaffetrakter
    to: unavailable
    for:
      hours: 0
      minutes: 10
      seconds: 0
    trigger: state
  conditions: []
  actions:
  - data:
      title: Device offline!
      message: "\U0001F4F5 {{ state_attr(trigger.to_state.entity_id, 'friendly_name')
        }} is offline more than 10 minutes!\n"
      data:
        channel: Notfall
        priority: high
        ttl: 0
        color: red
    action: notify.mobile_app_dagphone
  mode: single
- id: '1664382480728'
  alias: Plex remote idle
  trigger:
  - platform: numeric_state
    entity_id: sensor.tautulli_wan_bandwidth
    for:
      hours: 0
      minutes: 1
      seconds: 0
    below: 1000
  condition:
  - condition: state
    entity_id: switch.transmission_turtle_mode
    state: 'on'
  action:
  - service: switch.turn_off
    data: {}
    target:
      entity_id: switch.transmission_turtle_mode
  mode: single
- id: '1664829735021'
  alias: Prescence iOS
  description: ''
  trigger:
  - platform: webhook
    webhook_id: prescence-ios-NlWi7yybjTKsdAPZoy_b0irc
  condition: []
  action:
  - service: device_tracker.see
    data_template:
      dev_id: '{{ trigger.json.tracker_name }}'
      location_name: '{{ trigger.json.location_name }}'
      gps_accuracy: 80
  - service: notify.mobile_app_dagphone
    data:
      message: Prescence ios triggered
    enabled: false
  mode: queued
  max: 10
- id: '1664910648930'
  alias: Everyone left home
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: zone.home
    for:
      hours: 0
      minutes: 0
      seconds: 30
    below: 1
  condition: []
  action:
  - target:
      entity_id: scene.alle_lys_av
    metadata: {}
    action: scene.turn_on
  - action: switch.turn_off
    metadata: {}
    data: {}
    target:
      entity_id: switch.kaffetrakter
  - data: {}
    target:
      entity_id:
      - media_player.kjokken
      - media_player.sonos_stue
      - media_player.soverom
    action: media_player.media_stop
  - data: {}
    target:
      entity_id: media_player.stua
    action: media_player.turn_off
  - alias: If vacation mode is off
    if:
    - condition: state
      entity_id: input_boolean.vacation_mode
      state: 'off'
    then:
    - if:
      - condition: state
        entity_id: input_boolean.alarm_triggered_today
        state: 'on'
      - condition: time
        weekday:
        - mon
        - tue
        - wed
        - thu
        - fri
        before: '15:00:00'
        after: 00:00:00
      then:
      - data:
          option: sleep
        target:
          entity_id: input_select.stua_temperature_mode
        action: input_select.select_option
      - data:
          option: sleep
        target:
          entity_id: input_select.kontor_temperature_mode
        action: input_select.select_option
      else:
      - data:
          option: away
        target:
          entity_id: input_select.stua_temperature_mode
        action: input_select.select_option
      - data:
          option: away
        target:
          entity_id: input_select.kontor_temperature_mode
        action: input_select.select_option
      alias: Lower home temperature if not after midnight.
  - if:
    - alias: Temperature is below 10 and window is open
      condition: and
      conditions:
      - condition: numeric_state
        entity_id: weather.home
        attribute: temperature
        below: 10
      - condition: or
        conditions:
        - condition: state
          entity_id: binary_sensor.kontorvindu_contact
          state: 'on'
        - condition: state
          entity_id: binary_sensor.verandador_contact
          state: 'on'
        - condition: state
          entity_id: binary_sensor.soveromsvindu_contact
          state: 'on'
        alias: Window is open
    then:
    - data:
        message: Et vindu er fortsatt åpent, men ingen er hjemme!
        title: Vindu åpent
      action: notify.mobile_app_dagphone
    - data:
        message: Et vindu er fortsatt åpent, men ingen er hjemme!
        title: Vindu åpent
      action: notify.mobile_app_iphone_ingvild
    alias: Notify window left open
  mode: single
- id: '1664910808088'
  alias: Someone arrives home
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: zone.home
    above: 0
  condition:
  - condition: time
    after: 06:00:00
    before: 01:00:00
  action:
  - target:
      entity_id: scene.lyst
    metadata: {}
    enabled: false
    action: scene.turn_on
  - data: {}
    target:
      entity_id:
      - light.kjokken_og_stuelys
    action: light.turn_on
  - data:
      brightness: 255
    target:
      entity_id: light.gang
    action: light.turn_on
  - data:
      message: Someone arrived home
    enabled: false
    action: notify.mobile_app_dagphone
  - alias: If time less than 23
    if:
    - condition: time
      before: '23:00:00'
      after: 06:00:00
    then:
    - data:
        option: comfort
      target:
        entity_id: input_select.kontor_temperature_mode
      action: input_select.select_option
    - data:
        option: comfort
      target:
        entity_id: input_select.stua_temperature_mode
      action: input_select.select_option
  mode: single
- id: '1665747004941'
  alias: Stue bryter Controller
  description: ''
  use_blueprint:
    path: EPMatt/philips_324131092621.yaml
    input:
      integration: Zigbee2MQTT
      controller_entity: sensor.stue_bryter_action
      helper_last_controller_event: input_text.stue_bryter_helper_last_controller_event
      action_button_on_short:
      - service: light.turn_on
        data: {}
        target:
          entity_id: light.kjokkenlys
        enabled: false
      action_button_off_short:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.kjokkenlys
        enabled: false
      helper_debounce_delay: 50
      helper_double_press_delay: 500
- id: '1665747184275'
  alias: Stue bryter hook
  description: ''
  use_blueprint:
    path: EPMatt/light.yaml
    input:
      controller_entity: sensor.stue_bryter_action
      controller_model: Philips 324131092621 Hue Dimmer switch
      light: light.kjokken_og_stuelys
      force_brightness: false
      on_brightness: 255
      light_color_mode: None
      brightness_steps_long: 10
      brightness_steps_short: 10
      light_transition: 1000
- id: '1665928182281'
  alias: Ping Healthcheck.io
  description: ''
  trigger:
  - platform: time_pattern
    minutes: /5
  condition: []
  action:
  - service: rest_command.healthcheck_io
    data: {}
  mode: single
- id: '1666725567409'
  alias: Reset entities at midnight
  description: ''
  trigger:
  - platform: time
    at: 00:00:00
  condition: []
  action:
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.alarm_triggered_today
  mode: single
- id: '1667155963284'
  alias: Climate kontor temperature
  description: ''
  use_blueprint:
    path: climate_temperature.yaml
    input:
      climate_entity: climate.kontor
      window_entity: binary_sensor.kontorvindu_contact
      temperature_mode_entity: input_select.kontor_temperature_mode
      sensor_powersaving_x_most_expensive_hours_entity: sensor.powersaving_3_most_expensive
      comfort_temperature_entity: input_number.climate_kontor_comfort_temperature
      sleep_temperature_entity: input_number.climate_kontor_sleep_temperature
      away_temperature_entity: input_number.climate_kontor_away_temperature
      vacation_temperature_entity: input_number.climate_kontor_vacation_temperature
      window_open_temperature_entity: input_number.climate_kontor_window_open_temperature
- id: '1667163320134'
  alias: Climate stua temperature
  description: ''
  use_blueprint:
    path: climate_temperature.yaml
    input:
      climate_entity: climate.stua
      window_entity: binary_sensor.verandador_contact
      temperature_mode_entity: input_select.stua_temperature_mode
      sensor_powersaving_x_most_expensive_hours_entity: sensor.powersaving_3_most_expensive
      comfort_temperature_entity: input_number.climate_stua_comfort_temperature
      sleep_temperature_entity: input_number.climate_stua_sleep_temperature
      away_temperature_entity: input_number.climate_stua_away_temperature
      vacation_temperature_entity: input_number.climate_stua_vacation_temperature
      window_open_temperature_entity: input_number.climate_stua_window_open_temperature
- id: '1667163854348'
  alias: Climate soverom temperature
  description: ''
  use_blueprint:
    path: climate_temperature.yaml
    input:
      climate_entity: climate.soverom
      window_entity: binary_sensor.soveromsvindu_contact
      temperature_mode_entity: input_select.soverom_temperature_mode
      sensor_powersaving_x_most_expensive_hours_entity: sensor.powersaving_3_most_expensive
      comfort_temperature_entity: input_number.climate_soverom_comfort_temperature
      sleep_temperature_entity: input_number.climate_soverom_sleep_temperature
      away_temperature_entity: input_number.climate_soverom_away_temperature
      vacation_temperature_entity: input_number.climate_soverom_vacation_temperature
      window_open_temperature_entity: input_number.climate_soverom_window_open_temperature
- id: '1667288970418'
  alias: Work from home temperature kontor
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.kontor_temperature_mode
    from: comfort
  condition:
  - condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
    after: 08:00:00
    before: '16:00:00'
  - condition: numeric_state
    entity_id: zone.home
    above: 0
  - condition: state
    entity_id: input_boolean.vacation_mode
    state: 'off'
  action:
  - service: input_select.select_option
    data:
      option: comfort
    target:
      entity_id: input_select.kontor_temperature_mode
  mode: single
- id: '1667289030989'
  alias: Work from home temperature stua
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.stua_temperature_mode
    from: comfort
  condition:
  - condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
    after: 08:00:00
    before: '16:00:00'
  - condition: numeric_state
    entity_id: zone.home
    above: 0
  - condition: state
    entity_id: input_boolean.vacation_mode
    state: 'off'
  action:
  - service: input_select.select_option
    data:
      option: comfort
    target:
      entity_id: input_select.stua_temperature_mode
  mode: single
- id: '1668200249026'
  alias: Soverom bryter Controller
  description: ''
  use_blueprint:
    path: EPMatt/philips_929002398602.yaml
    input:
      integration: Zigbee2MQTT
      controller_entity: sensor.soverom_bryter_action
      helper_last_controller_event: input_text.soverom_bryter_helper_last_controller_event
      action_button_on_short: []
      button_on_double_press: false
      helper_debounce_delay: 50
      action_button_off_short:
      - service: automation.trigger
        data: {}
        target:
          entity_id: automation.toggle_soverom_varme
- id: '1668200313746'
  alias: Soverom bryter hook
  description: ''
  use_blueprint:
    path: EPMatt/light.yaml
    input:
      controller_entity: sensor.soverom_bryter_action
      controller_model: Philips 929002398602 Hue Dimmer switch v2
      light: light.soveromslampe
      light_transition: 1000
- id: '1668253573564'
  alias: Toggle soverom temperature mode
  description: ''
  trigger: []
  condition: []
  action:
  - if:
    - condition: state
      entity_id: input_select.soverom_temperature_mode
      state: comfort
    then:
    - service: tts.google_translate_say
      continue_on_error: true
      data:
        entity_id: media_player.soverom
        language: 'no'
        message: Buuu! jeg skrur ned temperaturen.
    - service: input_select.select_option
      data:
        option: sleep
      target:
        entity_id: input_select.soverom_temperature_mode
    else:
    - service: tts.google_translate_say
      continue_on_error: true
      data:
        entity_id: media_player.soverom
        language: 'no'
        message: Superfett! jeg skrur opp temperaturen.
    - service: input_select.select_option
      data:
        option: comfort
      target:
        entity_id: input_select.soverom_temperature_mode
  mode: queued
  max: 10
- id: '1668442394127'
  alias: Vacation mode
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.vacation_mode
    to: 'on'
    id: vacation_mode_turned_on
  - platform: state
    entity_id:
    - input_boolean.vacation_mode
    to: 'off'
    id: vacation_mode_turned_off
  - platform: time
    at: input_datetime.vacation_mode_auto_enable
    id: vacation_mode_auto_on
  - platform: time
    at: input_datetime.vacation_mode_auto_off
    id: vacation_mode_auto_off
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: vacation_mode_turned_on
      sequence:
      - service: input_select.select_option
        data:
          option: vacation
        target:
          entity_id:
          - input_select.kontor_temperature_mode
          - input_select.soverom_temperature_mode
          - input_select.stua_temperature_mode
          - input_select.bad_temperature_mode
    - conditions:
      - condition: trigger
        id: vacation_mode_auto_on
      sequence:
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.vacation_mode
        data: {}
      - service: notify.mobile_app_dagphone
        data:
          message: Vacation mode was automatically enabled.
    - conditions:
      - condition: trigger
        id: vacation_mode_auto_off
      sequence:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.vacation_mode
        data: {}
      - service: notify.mobile_app_dagphone
        data:
          message: Vacation mode was automatically disabled.
  mode: queued
  max: 10
- id: '1669812228569'
  alias: Water heater
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.varmtvannsbereder_on
    id: varmtvannsbereder_on_true
    to: 'True'
  - platform: state
    entity_id:
    - sensor.varmtvannsbereder_on
    id: varmtvannsbereder_on_false
    to: 'False'
  - platform: time_pattern
    minutes: /15
    seconds: '10'
  - alias: When too much consumption current hour
    platform: template
    value_template: '{{ (states(''sensor.home_consumption_hourly'') | float(0)) >
      (states(''input_number.kwh_limit'') | float(0)) }}'
    id: too_much_consumption_current_hour
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: sensor.varmtvannsbereder_on
      state: unavailable
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: han_sensor_power
        - condition: trigger
          id: varmtvannsbereder_on_false
        - condition: trigger
          id: too_much_consumption_current_hour
      sequence:
      - if:
        - condition: state
          entity_id: switch.varmtvannsbereder
          state: 'on'
        then:
        - service: switch.turn_off
          data: {}
          target:
            entity_id: switch.varmtvannsbereder
        - service: notify.mobile_app_dagphone
          data:
            message: Slo av varmtvannsbereder
          enabled: false
    - conditions:
      - condition: state
        entity_id: sensor.varmtvannsbereder_on
        state: 'True'
      - condition: template
        value_template: '{{ (states(''sensor.home_consumption_hourly'') | float(0))
          <= (states(''input_number.kwh_limit'') | float(0) * 0.95) }}'
      sequence:
      - if:
        - condition: state
          entity_id: switch.varmtvannsbereder
          state: 'off'
        then:
        - service: switch.turn_on
          data: {}
          target:
            entity_id: switch.varmtvannsbereder
        - service: notify.mobile_app_dagphone
          data:
            message: Slo på varmtvannsbereder
          enabled: false
  mode: queued
  max: 10
- id: '1670681071215'
  alias: High power consumption notification
  description: ''
  trigger:
  - platform: template
    value_template: '{{ (states(''sensor.home_consumption_hourly'') | float(0)) >
      (states(''input_number.kwh_limit'') | float(0) * 0.9) }}'
  condition:
  - condition: time
    after: 07:00:00
    before: '23:00:00'
  - condition: state
    entity_id: sensor.ev_smart_charging_charging
    state: 'off'
  action:
  - service: notify.mobile_app_dagphone
    data:
      message: Høyt strømbruk denne timen. Skru ned ting som bruker strøm for å unngå
        hopp i nettleie.
  - service: notify.mobile_app_iphone_ingvild
    data:
      message: Høyt strømbruk denne timen. Skru ned ting som bruker strøm for å unngå
        hopp i nettleie.
  mode: single
- id: '1671481581350'
  alias: Sync dag_home with device tracker state
  description: ''
  trigger:
  - platform: state
    entity_id:
    - device_tracker.ios_dag
  condition: []
  action:
  - if:
    - condition: state
      entity_id: device_tracker.ios_dag
      state: home
    then:
    - service: input_boolean.turn_on
      data: {}
      target:
        entity_id: input_boolean.dag_home
    else:
    - service: input_boolean.turn_off
      data: {}
      target:
        entity_id: input_boolean.dag_home
  mode: single
- id: '1671481698965'
  alias: Sync device trackers on HA startup
  description: ''
  trigger:
  - platform: homeassistant
    event: start
  condition: []
  action:
  - if:
    - condition: state
      entity_id: input_boolean.dag_home
      state: 'on'
    then:
    - service: device_tracker.see
      data:
        dev_id: ios_dag
        location_name: home
  - if:
    - condition: state
      entity_id: input_boolean.ingvild_home
      state: 'on'
    then:
    - service: device_tracker.see
      data:
        dev_id: ios_ingvild
        location_name: home
  mode: single
- id: '1671481768655'
  alias: Sync ingvild_home with device tracker state
  description: ''
  trigger:
  - platform: state
    entity_id:
    - device_tracker.ios_ingvild
  condition: []
  action:
  - if:
    - condition: state
      entity_id: device_tracker.ios_ingvild
      state: home
    then:
    - service: input_boolean.turn_on
      data: {}
      target:
        entity_id: input_boolean.ingvild_home
    else:
    - service: input_boolean.turn_off
      data: {}
      target:
        entity_id: input_boolean.ingvild_home
  mode: single
- id: '1671895454972'
  alias: Climate bad setting
  description: ''
  use_blueprint:
    path: regulator_temperature.yaml
    input:
      climate_entity: climate.bad
      temperature_mode_entity: input_select.bad_temperature_mode
      sensor_powersaving_x_most_expensive_hours_entity: sensor.powersaving_3_most_expensive
      comfort_temperature_entity: input_number.climate_bad_comfort_setting
      eco_temperature_entity: input_number.climate_bad_eco_setting
      vacation_temperature_entity: input_number.climate_bad_vacation_setting
- id: '1672609722115'
  alias: Prescence tracking input booleans
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.dag_home
    - input_boolean.ingvild_home
  condition: []
  action:
  - if:
    - condition: state
      entity_id: input_boolean.dag_home
      state: 'on'
    then:
    - service: device_tracker.see
      data:
        location_name: home
        dev_id: ios_dag
        gps_accuracy: 80
    else:
    - service: device_tracker.see
      data:
        dev_id: ios_dag
        location_name: not_home
        gps_accuracy: 80
  - if:
    - condition: state
      entity_id: input_boolean.ingvild_home
      state: 'on'
    then:
    - service: device_tracker.see
      data:
        location_name: home
        dev_id: ios_ingvild
        gps_accuracy: 80
    else:
    - service: device_tracker.see
      data:
        dev_id: ios_ingvild
        location_name: not_home
        gps_accuracy: 80
  mode: queued
- id: '1689443288848'
  alias: Auto enable vacation mode
  description: ''
  trigger:
  - platform: state
    entity_id:
    - zone.home
    to: '0'
    for:
      hours: 24
      minutes: 0
      seconds: 0
  condition:
  - condition: state
    entity_id: input_boolean.vacation_mode
    state: 'off'
  - condition: numeric_state
    entity_id: weather.home
    attribute: temperature
    above: 0
    alias: Outside temperature is above 0
  action:
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.vacation_mode
  - service: notify.mobile_app_dagphone
    data:
      message: Feriemodus ble automatisk slått på siden ingen var hjemme på 24 timer.
      title: Feriemodus slått på
  - service: notify.mobile_app_iphone_ingvild
    data:
      message: Feriemodus ble automatisk slått på siden ingen var hjemme på 24 timer.
      title: Feriemodus slått på
  mode: single
- id: '1689443492296'
  alias: Vacation mode auto off
  description: ''
  trigger:
  - platform: state
    entity_id:
    - zone.home
    from: '0'
  condition:
  - condition: state
    entity_id: input_boolean.vacation_mode
    state: 'on'
    for:
      hours: 5
      minutes: 0
      seconds: 0
  action:
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.vacation_mode
  - service: notify.mobile_app_dagphone
    data:
      title: Feriemodus avslått
      message: Feriemodus ble automatisk slått av siden noen kom hjem.
  - service: notify.mobile_app_iphone_ingvild
    data:
      title: Feriemodus avslått
      message: Feriemodus ble automatisk slått av siden noen kom hjem.
  mode: single
- id: '1690402291122'
  alias: Unlock Pingu Charge port
  description: ''
  trigger: []
  condition: []
  action:
  - service: switch.turn_off
    data: {}
    target:
      entity_id: switch.pingu_charger
    enabled: true
  - service: lock.unlock
    data: {}
    target:
      entity_id: lock.pingu_charge_port_latch
    enabled: true
  mode: single
- id: '1692894070537'
  alias: EV smart charging EV connected
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.pingu_charger
    from:
    to: 'on'
  - platform: homeassistant
    event: start
  condition:
  - condition: state
    entity_id: device_tracker.pingu_location_tracker
    state: home
  action:
  - if:
    - condition: state
      entity_id: binary_sensor.pingu_charger
      state: 'on'
    then:
    - service: switch.turn_on
      target:
        entity_id: switch.ev_smart_charging_ev_connected
      data: {}
    else:
    - service: switch.turn_off
      target:
        entity_id: switch.ev_smart_charging_ev_connected
      data: {}
  mode: single
- id: '1695062611146'
  alias: EV toggle smart charging based on Tesla location tracker
  description: ''
  trigger:
  - platform: state
    entity_id:
    - device_tracker.pingu_location_tracker
    from:
    to:
  - platform: homeassistant
    event: start
  condition: []
  action:
  - if:
    - condition: state
      entity_id: device_tracker.pingu_location_tracker
      state: home
    then:
    - service: switch.turn_on
      data: {}
      target:
        entity_id: switch.ev_smart_charging_smart_charging_activated
    else:
    - service: switch.turn_off
      data: {}
      target:
        entity_id: switch.ev_smart_charging_smart_charging_activated
    - service: switch.turn_on
      data: {}
      target:
        entity_id: switch.pingu_charger
  mode: single
- id: '1697652769434'
  alias: EV charging start notification
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.pingu_charger
    to: 'on'
    from:
  condition:
  - condition: state
    entity_id: device_tracker.pingu_location_tracker
    state: home
  action:
  - wait_template: '{{ state_attr(''sensor.ev_smart_charging_charging'', ''charging_start_time'')
      != None }}'
    continue_on_timeout: true
    timeout: '10'
  - data:
      title: EV Connected
      message: Charging will start at {{ as_timestamp(states.sensor.ev_smart_charging_charging.attributes["charging_start_time"])
        | timestamp_custom('%H:%M') }}
    action: notify.mobile_app_dagphone
  mode: single
- id: '1699425309703'
  alias: EV precondition on battery if electricity price is high and normal SOC
  description: ''
  trigger:
  - platform: state
    entity_id:
    - climate.pingu_hvac_climate_system
    to: heat_cool
  condition:
  - condition: state
    entity_id: device_tracker.pingu_location_tracker
    state: home
  - condition: state
    entity_id: binary_sensor.pingu_charger
    state: 'on'
  - condition: numeric_state
    entity_id: sensor.nordpool
    above: 1.75
  - condition: not
    conditions:
    - condition: state
      entity_id: binary_sensor.pingu_charging
      state: 'on'
  - alias: Confirm Pingu SOC is normal
    condition: and
    conditions:
    - condition: numeric_state
      entity_id: sensor.pingu_battery
      below: 70
    - condition: numeric_state
      entity_id: sensor.pingu_battery
      above: 50
  action:
  - service: number.set_value
    data:
      value: '0'
    target:
      entity_id: number.pingu_charging_amps
  mode: single
- id: '1700029700785'
  alias: EV retry turning climate on
  description: ''
  trigger:
  - platform: state
    entity_id:
    - climate.pingu_hvac_climate_system
    from:
    to: heat_cool
  condition: []
  action:
  - delay:
      hours: 0
      minutes: 0
      seconds: 10
      milliseconds: 0
  - if:
    - condition: not
      conditions:
      - condition: state
        entity_id: climate.pingu_hvac_climate_system
        state: heat_cool
    then:
    - repeat:
        sequence:
        - service: climate.turn_on
          data: {}
          target:
            entity_id: climate.pingu_hvac_climate_system
        - delay:
            hours: 0
            minutes: 0
            seconds: 20
            milliseconds: 0
        until:
        - condition: or
          conditions:
          - condition: state
            entity_id: climate.pingu_hvac_climate_system
            state: heat_cool
            for:
              hours: 0
              minutes: 0
              seconds: 5
          - condition: template
            value_template: '{{ repeat.index > 5 }}

              '
  mode: single
- id: '1701203531307'
  alias: EV smart charging power adjust Zaptec
  description: ''
  triggers:
  - seconds: /30
    minutes: '*'
    hours: '*'
    enabled: true
    trigger: time_pattern
  - entity_id:
    - sensor.ev_smart_charging_charging
    from:
    to:
    enabled: true
    id: charging_turned_on
    trigger: state
  - entity_id:
    - input_number.kwh_limit
    from:
    to:
    enabled: true
    trigger: state
  - entity_id:
    - sensor.han_sensor_power
    above: input_number.power_limit
    enabled: true
    id: power_above_power_limit
    trigger: numeric_state
  - entity_id:
    - input_number.power_limit
    enabled: true
    from:
    to:
    trigger: state
  - entity_id:
    - sensor.home_consumption_hourly
    above: input_number.kwh_limit
    for:
      hours: 0
      minutes: 0
      seconds: 30
    enabled: true
    id: consumption_above_limit
    trigger: numeric_state
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: state
        entity_id: sensor.ev_smart_charging_charging
        state: 'on'
      - condition: or
        conditions:
        - alias: Last changed more than two minutes ago and minute is over 1 and below
            59
          condition: and
          conditions:
          - alias: Check that last changed is more than two minutes ago
            condition: template
            value_template: '{{ now() - states.number.ev_charger_installation_available_current.last_changed
              > timedelta(minutes = 2) }}'
          - alias: Check that minute is over 1 and below 59
            condition: template
            value_template: '{{ now().minute >= 1 and now().minute <= 59 }}'
        - condition: trigger
          id:
          - power_above_power_limit
          - charging_turned_on
          - hass_started
          - consumption_above_limit
        enabled: true
      - condition: not
        conditions:
        - condition: state
          entity_id: sensor.ev_charger_charger_mode
          state: Disconnected
        alias: Test that EV Charger is not Disconnected
      sequence:
      - variables:
          volts: 230
          is_same_hour_as_HA_start_hour: '{{ as_datetime(states(''sensor.uptime'')).strftime(''%Y-%m-%d
            %H:00:00'') == utcnow().strftime(''%Y-%m-%d %H:00:00'') }}'
          current_charge_limit_amps: '{{ states(''number.ev_charger_installation_available_current'')
            | int(0) }}'
          power_used_total: '{{ states(''sensor.han_sensor_power'') | int }}'
          non_ev_power_now: '{{ states(''sensor.non_ev_current_power'') | int }}'
          kWh_limit_entity: '{{ states(''input_number.kwh_limit'') | float(0) }}'
          power_limit_entity: '{{ states(''input_number.power_limit'') | float(9000)
            }}'
          kWh_consumption_current_hour: '{{ states(''sensor.home_consumption_hourly'')
            | float(0) }}'
          min_amp_limit: '{{ state_attr(''number.ev_charger_installation_available_current'',
            ''min'') | int(0) }}'
          max_amp_limit: '{{ state_attr(''number.ev_charger_installation_available_current'',
            ''max'') | int(16) }}'
          ev_charger_min_current: '{{ states(''number.ev_charger_charger_min_current'')
            | float(0) }}'
          non_ev_power_moving_avg: '{{ states(''sensor.non_ev_power_moving_avg_10m'')
            | float(0) }}'
          kWh_limit: '{{ (kWh_limit_entity * 0.85) if is_same_hour_as_HA_start_hour
            else kWh_limit_entity }}'
          time_left_current_hour: '{{ 1 - now().minute / 60 - now().second / 3600
            }}'
          non_ev_kWh_consumption_rest_of_hour: '{{ ((non_ev_power_moving_avg / 1000.0)
            * time_left_current_hour) }}'
          available_kWh_left_for_charging_current_hour: '{{ [0, kWh_limit - kWh_consumption_current_hour
            - non_ev_kWh_consumption_rest_of_hour] | max }}'
          power_charging_rest_of_hour: '{{ (available_kWh_left_for_charging_current_hour
            / time_left_current_hour) * 1000.0 }}'
          will_draw_more_power_than_power_limit: '{{ (power_charging_rest_of_hour
            + non_ev_power_now) > power_limit_entity }}'
          power_limit_charging: "{%- if will_draw_more_power_than_power_limit -%}\n
            \ {{ power_limit_entity - non_ev_power_now }}\n{%- else -%}\n  {{ power_charging_rest_of_hour
            }}\n{%- endif -%}"
          new_charge_limit_amps: '{{ (power_limit_charging / volts) | round(0)}}'
          new_charge_limit: "{%- if new_charge_limit_amps >= ev_charger_min_current
            -%}\n  {%- if current_charge_limit_amps == 0 and new_charge_limit_amps
            < (ev_charger_min_current + 3) -%}\n    0.0\n  {%- else -%}\n    {{ [[new_charge_limit_amps,
            min_amp_limit] | max, max_amp_limit] | min }}\n  {%- endif -%}\n{%- else
            -%}\n  {%- if (time_left_current_hour < 0.016 and current_charge_limit_amps
            > 0) or (time_left_current_hour < 0.15 and new_charge_limit_amps >= 3)
            -%}\n    {{ ev_charger_min_current }}\n  {%- else -%}\n    0.0\n  {%-
            endif -%}\n{%- endif -%}"
      - data:
          value: '{{ new_charge_limit }}'
        target:
          entity_id: number.ev_charger_installation_available_current
        enabled: true
        action: number.set_value
      - if:
        - condition: template
          value_template: '{{ current_charge_limit_amps != 0 and new_charge_limit
            | int == 0 }}'
        then:
        - data:
            level: warning
            message: 'New charge limit was 0. data: { "is_same_hour_as_HA_start_hour":
              "{{ is_same_hour_as_HA_start_hour }}", "current_charge_limit_amps":
              "{{ current_charge_limit_amps }}", "power_used_total": "{{ power_used_total
              }}", "non_ev_power_now": "{{ non_ev_power_now }}", "kWh_limit_entity":
              "{{ kWh_limit_entity }}", "kWh_consumption_current_hour": "{{ kWh_consumption_current_hour
              }}", "ev_charger_min_current": "{{ ev_charger_min_current }}", "non_ev_power_moving_avg":
              "{{ non_ev_power_moving_avg }}", "time_left_current_hour": "{{ time_left_current_hour
              }}", "non_ev_kWh_consumption_rest_of_hour": "{{ non_ev_kWh_consumption_rest_of_hour
              }}", "available_kWh_left_for_charging_current_hour": "{{ available_kWh_left_for_charging_current_hour
              }}", "power_charging_rest_of_hour": "{{ power_charging_rest_of_hour }}",
              "will_draw_more_power_than_power_limit": "{{ will_draw_more_power_than_power_limit }}",
              "power_limit_charging": "{{ power_limit_charging }}", "new_charge_limit_amps":
              "{{ new_charge_limit_amps }}", "new_charge_limit": "{{ new_charge_limit
              }}" }'
          enabled: true
          action: system_log.write
        enabled: false
    - conditions:
      - condition: or
        conditions:
        - condition: state
          entity_id: sensor.ev_smart_charging_charging
          state: 'off'
        - condition: state
          entity_id: sensor.ev_charger_charger_mode
          state: Disconnected
      sequence:
      - data:
          value: '0'
        target:
          entity_id: number.ev_charger_installation_available_current
        enabled: true
        action: number.set_value
    default: []
  mode: single
- id: '1701639669414'
  alias: EV smart charging set charge speed based on max kWh
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_number.kwh_limit
    from:
    to:
  - platform: state
    entity_id:
    - sensor.ev_smart_charging_charging
    attribute: charging_start_time
  - platform: state
    entity_id:
    - sensor.ev_smart_charging_charging
    attribute: charging_stop_time
  - platform: state
    entity_id:
    - sensor.varmtvannsbereder_on
    attribute: today_on
  - platform: state
    entity_id:
    - sensor.varmtvannsbereder_on
    attribute: tomorrow_on
  - platform: state
    entity_id:
    - sensor.ev_charger_charger_mode
    from: Disconnected
    to:
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: sensor.ev_smart_charging_charging
      state: 'On'
  - condition: template
    value_template: '{{ has_value(''number.ev_smart_charging_charging_speed'') }}'
    alias: Check if ev_smart_charging_charging_speed is available
    enabled: true
  - alias: Check that last changed is more than 1 minute ago
    condition: template
    value_template: '{{ now() - states.number.ev_smart_charging_charging_speed.last_changed
      > timedelta(minutes = 1) }}'
  action:
  - target:
      entity_id: weather.home
    data:
      type: hourly
    response_variable: weather_forecast
    action: weather.get_forecasts
  - variables:
      num_hours_to_charge: '{{ state_attr("sensor.ev_smart_charging_charging", "charging_number_of_hours")
        | float(0) }}'
  - if:
    - condition: template
      value_template: '{{ num_hours_to_charge > 0 }}'
      alias: Hours to charge is more than 0
    - condition: template
      value_template: '{{ states(''input_number.kwh_limit'') | float(0) > 3 }}'
      alias: kWh limit is higher than 3
    then:
    - variables:
        margin: 0
        kWh_battery: 75
        minimum_temp_modifier: -20
        minimum_temp_speed_modifier: 0.6
        kWh_limit: '{{ states(''input_number.kwh_limit'') | float(0) }}'
        power_limit: '{{ kWh_limit * (1-margin) * 1000 }}'
        six_amps_power: '{{ 6 * 230 }}'
        water_heater_power: 2000
        busy_hour_power: 1500
        water_heater_hours: "{%- set now=now() -%}\n{{state_attr('sensor.varmtvannsbereder_on',
          'hours_on_datetime')\n  | default([])\n  | select('gt', now)\n  | map(attribute='hour')\n
          \ | list\n}}"
        busy_hours:
        - 5
        - 6
        - 7
        - 8
        - 14
        - 15
        - 16
        - 17
        - 18
        - 19
        - 20
        - 21
        - 22
        forecast_hours: '{{ weather_forecast[''weather.home''][''forecast''] }}'
        calculated_speeds: "{%- set start_of_hour_now = now().replace(microsecond=0,
          second=0, minute=0) -%} \n{%- set ns = namespace(speeds=[]) -%}\n{%- for
          item in state_attr('sensor.ev_smart_charging_charging', 'charging_schedule')
          -%}\n  {%- if item.start >= start_of_hour_now and item.value > 0.0 -%}\n
          \   {%- set start_of_hour = item.start.replace(microsecond=0, second=0,
          minute=0) -%}\n    {%- set hour = item.start.hour -%}\n    {%- set ns.available_charging_power
          = power_limit -%}\n    {%- set ns.temperature_speed_modifier = 0.0 -%}\n\n
          \   {%- if hour in busy_hours | map('int') -%}\n      {%- set ns.available_charging_power
          = ns.available_charging_power - busy_hour_power -%}\n    {%- endif -%}\n\n
          \   {%- if hour in water_heater_hours | map('int') -%}\n      {%- set ns.available_charging_power
          = ns.available_charging_power - water_heater_power -%}\n    {%- endif -%}\n\n
          \   {%- if ns.available_charging_power < six_amps_power -%}\n      {%- set
          ns.available_charging_power = 0 -%}\n    {%- endif -%}\n\n    {%- for forecast_hour
          in forecast_hours -%}\n      {%- if forecast_hour['datetime'] | as_datetime
          == start_of_hour -%}\n        {%- set temperature = forecast_hour['temperature']
          | float(0) -%}\n        {%- if temperature <= minimum_temp_modifier -%}\n
          \           {%- set ns.temperature_speed_modifier = minimum_temp_speed_modifier
          -%}\n        {%- elif temperature < 0 -%}\n            {%- set ns.temperature_speed_modifier
          = (minimum_temp_speed_modifier / minimum_temp_modifier) * temperature -%}\n
          \       {%- endif -%}\n      {%- endif -%}\n    {%- endfor -%}\n\n    {%-
          set speed = ((ns.available_charging_power / 1000 / kWh_battery) * 100) *
          (1-ns.temperature_speed_modifier) -%}\n    {%- set ns.speeds = ns.speeds
          + [speed] -%}\n  {%- endif -%}\n{%- endfor -%}\n{{ ns.speeds }}"
        estimated_speed: '{{ ((calculated_speeds | sum) / (calculated_speeds | length))
          | default(0) | round(1, ''floor'') }}'
    - data:
        value: '{{ estimated_speed }}'
      target:
        entity_id: number.ev_smart_charging_charging_speed
      enabled: true
      action: number.set_value
  mode: single
  max_exceeded: silent
- id: '1702760707198'
  alias: EV Smart charging - set charge completion time
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_datetime.ev_departure_time_monday
    - input_datetime.ev_departure_time_tuesday
    - input_datetime.ev_departure_time_wednesday
    - input_datetime.ev_departure_time_thursday
    - input_datetime.ev_departure_time_friday
    - input_datetime.ev_departure_time_saturday
    - input_datetime.ev_departure_time_sunday
  - platform: time
    at: '12:00:01'
  - platform: homeassistant
    event: start
  condition:
  - condition: time
    after: '12:00:00'
  action:
  - choose:
    - conditions:
      - condition: time
        weekday:
        - mon
      sequence:
      - variables:
          option_to_set: "{%- set time = strptime(states('input_datetime.ev_departure_time_tuesday'),
            '%H:%M:%S') -%} {%- if time.minute >= 30 -%}\n  {{ time.replace(second=0,
            microsecond=0, minute=0, hour=time.hour+1).strftime('%H:%M') }}\n{%- else
            -%}\n  {{ time.replace(second=0, microsecond=0, minute=0).strftime('%H:%M')
            }}\n{%- endif -%}"
      - service: select.select_option
        target:
          entity_id: select.ev_smart_charging_charge_completion_time
        data:
          option: '{{ option_to_set }}'
    - conditions:
      - condition: time
        weekday:
        - tue
      sequence:
      - variables:
          option_to_set: "{%- set time = strptime(states('input_datetime.ev_departure_time_wednesday'),
            '%H:%M:%S') -%} {%- if time.minute >= 30 -%}\n  {{ time.replace(second=0,
            microsecond=0, minute=0, hour=time.hour+1).strftime('%H:%M') }}\n{%- else
            -%}\n  {{ time.replace(second=0, microsecond=0, minute=0).strftime('%H:%M')
            }}\n{%- endif -%}"
      - service: select.select_option
        target:
          entity_id: select.ev_smart_charging_charge_completion_time
        data:
          option: '{{ option_to_set }}'
    - conditions:
      - condition: time
        weekday:
        - wed
      sequence:
      - variables:
          option_to_set: "{%- set time = strptime(states('input_datetime.ev_departure_time_thursday'),
            '%H:%M:%S') -%} {%- if time.minute >= 30 -%}\n  {{ time.replace(second=0,
            microsecond=0, minute=0, hour=time.hour+1).strftime('%H:%M') }}\n{%- else
            -%}\n  {{ time.replace(second=0, microsecond=0, minute=0).strftime('%H:%M')
            }}\n{%- endif -%}"
      - service: select.select_option
        target:
          entity_id: select.ev_smart_charging_charge_completion_time
        data:
          option: '{{ option_to_set }}'
    - conditions:
      - condition: time
        weekday:
        - thu
      sequence:
      - variables:
          option_to_set: "{%- set time = strptime(states('input_datetime.ev_departure_time_friday'),
            '%H:%M:%S') -%} {%- if time.minute >= 30 -%}\n  {{ time.replace(second=0,
            microsecond=0, minute=0, hour=time.hour+1).strftime('%H:%M') }}\n{%- else
            -%}\n  {{ time.replace(second=0, microsecond=0, minute=0).strftime('%H:%M')
            }}\n{%- endif -%}"
      - service: select.select_option
        target:
          entity_id: select.ev_smart_charging_charge_completion_time
        data:
          option: '{{ option_to_set }}'
    - conditions:
      - condition: time
        weekday:
        - fri
      sequence:
      - variables:
          option_to_set: "{%- set time = strptime(states('input_datetime.ev_departure_time_saturday'),
            '%H:%M:%S') -%} {%- if time.minute >= 30 -%}\n  {{ time.replace(second=0,
            microsecond=0, minute=0, hour=time.hour+1).strftime('%H:%M') }}\n{%- else
            -%}\n  {{ time.replace(second=0, microsecond=0, minute=0).strftime('%H:%M')
            }}\n{%- endif -%}"
      - service: select.select_option
        target:
          entity_id: select.ev_smart_charging_charge_completion_time
        data:
          option: '{{ option_to_set }}'
    - conditions:
      - condition: time
        weekday:
        - sat
      sequence:
      - variables:
          option_to_set: "{%- set time = strptime(states('input_datetime.ev_departure_time_sunday'),
            '%H:%M:%S') -%} {%- if time.minute >= 30 -%}\n  {{ time.replace(second=0,
            microsecond=0, minute=0, hour=time.hour+1).strftime('%H:%M') }}\n{%- else
            -%}\n  {{ time.replace(second=0, microsecond=0, minute=0).strftime('%H:%M')
            }}\n{%- endif -%}"
      - service: select.select_option
        target:
          entity_id: select.ev_smart_charging_charge_completion_time
        data:
          option: '{{ option_to_set }}'
    - conditions:
      - condition: time
        weekday:
        - sun
      sequence:
      - variables:
          option_to_set: "{%- set time = strptime(states('input_datetime.ev_departure_time_monday'),
            '%H:%M:%S') -%} {%- if time.minute >= 30 -%}\n  {{ time.replace(second=0,
            microsecond=0, minute=0, hour=time.hour+1).strftime('%H:%M') }}\n{%- else
            -%}\n  {{ time.replace(second=0, microsecond=0, minute=0).strftime('%H:%M')
            }}\n{%- endif -%}"
      - service: select.select_option
        target:
          entity_id: select.ev_smart_charging_charge_completion_time
        data:
          option: '{{ option_to_set }}'
  mode: single
- id: '1704834782072'
  alias: 'EV smart charging toggle continuous charging '
  description: ''
  triggers:
  - entity_id:
    - weather.home
    trigger: state
  - trigger: time_pattern
    hours: /1
  conditions: []
  actions:
  - action: weather.get_forecasts
    metadata: {}
    data:
      type: daily
    target:
      entity_id: weather.home
    response_variable: forecast
  - if:
    - alias: Test if forecast low temperature is above 0
      condition: template
      value_template: '{{ forecast["weather.home"]["forecast"][0].templow > 0 }}'
    then:
    - metadata: {}
      data: {}
      target:
        entity_id: switch.ev_smart_charging_continuous_charging_preferred
      action: switch.turn_off
    else:
    - metadata: {}
      data: {}
      target:
        entity_id: switch.ev_smart_charging_continuous_charging_preferred
      action: switch.turn_on
  mode: single
- id: '1727200394891'
  alias: Notify vaskemaskin stopped
  description: ''
  trigger:
  - platform: numeric_state
    entity_id:
    - sensor.vaskemaskin_power
    below: 5
    for:
      hours: 0
      minutes: 1
      seconds: 0
  condition:
  - condition: state
    entity_id: input_boolean.vaskemaskin_running
    state: 'on'
  action:
  - action: notify.mobile_app_dagphone
    metadata: {}
    data:
      message: Vaskemaskin ferdig!
  - action: notify.mobile_app_iphone_ingvild
    metadata: {}
    data:
      message: Vaskemaskin ferdig!
  - action: tts.google_translate_say
    metadata: {}
    data:
      cache: false
      entity_id: media_player.kjokken
      message: Vaskemaskinen i kjelleren er ferdig!
      language: 'no'
  - action: input_boolean.turn_off
    metadata: {}
    data: {}
    target:
      entity_id: input_boolean.vaskemaskin_running
  mode: single
- id: '1727200565201'
  alias: Set vaskemaskin running
  description: ''
  trigger:
  - platform: numeric_state
    entity_id:
    - sensor.vaskemaskin_power
    for:
      hours: 0
      minutes: 1
      seconds: 0
    above: 5
  condition: []
  action:
  - action: input_boolean.turn_on
    metadata: {}
    data: {}
    target:
      entity_id: input_boolean.vaskemaskin_running
  mode: single
- id: '1727247225263'
  alias: Turn off kaffetrakter after 45 minutes
  description: ''
  triggers:
  - entity_id:
    - switch.kaffetrakter
    to: 'on'
    for:
      hours: 0
      minutes: 45
      seconds: 0
    trigger: state
  conditions: []
  actions:
  - action: switch.turn_off
    metadata: {}
    data: {}
    target:
      entity_id: switch.kaffetrakter
  - action: tts.google_translate_say
    data:
      cache: true
      message: Slo av kaffetrakteren.
      entity_id: media_player.soverom, media_player.kjokken, media_player.sonos_roam_sl
      language: 'no'
  mode: single
- id: '1727253150692'
  alias: Notify water leak
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.lekkasje_kjokken_water_leak
    to: 'on'
  condition: []
  action:
  - action: notify.mobile_app_dagphone
    metadata: {}
    data:
      message: Lekkasje under vasken!
  - action: notify.mobile_app_iphone_ingvild
    metadata: {}
    data:
      message: Lekkasje under vasken!
  mode: single
- id: '1727327685962'
  alias: Notify coffee ready
  trigger:
  - platform: numeric_state
    entity_id:
    - sensor.kaffetrakter_power
    above: 1000
    for:
      hours: 0
      minutes: 0
      seconds: 15
  condition: []
  action:
  - wait_for_trigger:
    - platform: numeric_state
      entity_id:
      - sensor.kaffetrakter_power
      below: 100
    timeout:
      hours: 0
      minutes: 10
      seconds: 0
      milliseconds: 0
    continue_on_timeout: false
  - delay:
      hours: 0
      minutes: 0
      seconds: 30
      milliseconds: 0
  - action: tts.google_translate_say
    data:
      cache: true
      message: Kaffen er klar!
      entity_id: media_player.soverom, media_player.kjokken, media_player.sonos_roam_sl
      language: 'no'
  mode: single
