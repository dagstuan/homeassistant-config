blueprint:
  name: Climate Open Window
  description: Control a climate entity automatically when opening and closing a window
  domain: automation
  input:
    climate_entity:
      name: Climate entity
      selector:
        entity:
          domain: climate
    window_entity:
      name: Window entity
      selector:
        entity:
          domain: binary_sensor
    temperature_before_window_open_entity:
      name: Temperature before window open entity
      selector:
        entity:
          domain: input_number
    temperature_when_window_open:
      name: Temperature to set when window is open
      default: 5
      selector:
        number:
          min: 0.0
          max: 100.0
          mode: slider
          step: 0.5

mode: queued

trigger_variables:
  input_climate_entity: !input climate_entity
  input_window_entity: !input window_entity
  input_temperature_before_window_open_entity: !input temperature_before_window_open_entity
  input_temperature_when_window_open: !input temperature_when_window_open
trigger:
  - platform: state
    entity_id: !input window_entity
    to: "on"
    for:
      hours: 0
      minutes: 0
      seconds: 2
    id: changed-to-open
  - platform: state
    entity_id: !input climate_entity
    attribute: temperature
    id: temp-change
  - platform: state
    entity_id: !input window_entity
    to: "off"
    for:
      hours: 0
      minutes: 0
      seconds: 2
    id: changed-to-closed
condition: []
action:
  - choose:
      - conditions:
          - condition: state
            entity_id: !input window_entity
            state: "on"
          - condition: template
            value_template: "{{ (state_attr(input_climate_entity, 'temperature') | int) != input_temperature_when_window_open }}"
            alias: Confirm climate entity not {{ input_temperature_when_window_open }} degrees
        sequence:
          - if:
              - condition: trigger
                id: changed-to-open
            then:
              - service: input_number.set_value
                data:
                  value: "{{ state_attr(input_climate_entity, 'temperature') }}"
                target:
                  entity_id: !input temperature_before_window_open_entity
          - delay:
              hours: 0
              minutes: 0
              seconds: 1
              milliseconds: 0
          - service: climate.set_temperature
            data:
              temperature: "{{ input_temperature_when_window_open }}"
            target:
              entity_id: !input climate_entity
      - conditions:
          - condition: state
            entity_id: !input window_entity
            state: "off"
          - condition: not
            conditions:
              - condition: trigger
                id: temp-change
          - condition: numeric_state
            entity_id: !input temperature_before_window_open_entity
            above: 0
        sequence:
          - service: climate.set_temperature
            data:
              temperature: >-
                {{ states(input_temperature_before_window_open_entity) | float(0) }}
            target:
              entity_id: !input climate_entity

