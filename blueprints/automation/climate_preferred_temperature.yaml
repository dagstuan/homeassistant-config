blueprint:
  name: Climate preferred temperature
  description: Control a climate entity automatically when opening and closing a window
  domain: automation
  input:
    climate_entity:
      name: Climate entity
      selector:
        entity:
          domain: climate
    window_entity:
      name: Window entity
      selector:
        entity:
          domain: binary_sensor
    preferred_temperature_entity:
      name: Preferred temperature entity
      selector:
        entity:
          domain: input_number
    temperature_when_window_open_entity:
      name: Entity containing the temperature to set when window is open
      selector:
        entity:
          domain: input_number

mode: queued

trigger_variables:
  input_climate_entity: !input climate_entity
  input_window_entity: !input window_entity
  input_preferred_temperature_entity: !input preferred_temperature_entity
  input_temperature_when_window_open_entity: !input temperature_when_window_open_entity
trigger:
  - platform: state
    entity_id: !input window_entity
    to: "on"
    for:
      hours: 0
      minutes: 0
      seconds: 2
    id: window-changed-to-open
  - platform: state
    entity_id: !input window_entity
    to: "off"
    for:
      hours: 0
      minutes: 0
      seconds: 2
    id: window-changed-to-closed
  - platform: state
    entity_id: !input climate_entity
    id: climate-temp-change
    attribute: temperature
  - platform: state
    entity_id: !input preferred_temperature_entity
    id: preferred-temperature-change
condition: []
action:
  - choose:
      - conditions:
          - condition: trigger
            id: window-changed-to-open
        # Sett temp til 5 grader
        sequence:
          - service: climate.set_temperature
            data:
              temperature: "{{ states(input_temperature_when_window_open_entity) | float(0) }}"
            target:
              entity_id: !input climate_entity
      - conditions:
          - condition: trigger
            id: window-changed-to-closed
        # Sett temp til preferred temp
        sequence:
          - service: climate.set_temperature
            data:
              temperature: >-
                {{ states(input_preferred_temperature_entity) | float(0) }}
            target:
              entity_id: !input climate_entity
      - conditions:
          - condition: trigger
            id: climate-temp-change
          - condition: template
            value_template: "{{ (state_attr(input_climate_entity, 'temperature') | float(0)) != states(input_temperature_when_window_open_entity) | float(0) }}"
            alias: Confirm climate entity not {{ states(input_temperature_when_window_open_entity) }} degrees
        # Climate temp was changed.
        # Update preferred temp to reflect new temp set elsewhere
        sequence:
          - service: input_number.set_value
            data:
              value: "{{ state_attr(input_climate_entity, 'temperature') }}"
            target:
              entity_id: !input preferred_temperature_entity
          # If window is still open, reset temperature to window open temp
          - if:
              - condition: state
                entity_id: !input window_entity
                state: "on"
            then:
              - service: climate.set_temperature
                data:
                  temperature: "{{ states(input_temperature_when_window_open_entity) | float(0) }}"
                target:
                  entity_id: !input climate_entity
      - conditions:
          - condition: trigger
            id: preferred-temperature-change
          - condition: state
            entity_id: !input window_entity
            state: "off"
        # Preferred temperature changed. And window is off.
        # Update temperature of climate entity.
        sequence:
          - service: climate.set_temperature
            data:
              temperature: >-
                {{ states(input_preferred_temperature_entity) | float(0) }}
            target:
              entity_id: !input climate_entity
